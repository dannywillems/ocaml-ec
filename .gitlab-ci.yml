stages:
  - lint
  - build
  - doc
  - coverage
  - deploy

lint:
  stage: lint
  image: ocaml/opam:debian-ocaml-4.11
  before_script:
    - opam install ocamlformat.0.15.0 -y
  script:
    - dune build @fmt
  rules:
    - when: always

.build-test: &build_definition
  stage: build
  before_script:
    # Always update system package manager + setup OPAM env
    - sudo apt-get update && sudo apt-get upgrade -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    - opam depext -i -y zarith
  script:
    - opam install --deps-only --with-test -y .
    # Install the package
    - opam install . -y
    # Run tests
    - dune runtest
  rules:
    - when: always

build-ocaml-4.11:
  <<: *build_definition
  image: ocaml/opam:debian-ocaml-4.11

build-ocaml-4.12:
  <<: *build_definition
  image: ocaml/opam:debian-ocaml-4.12

doc:
  stage: doc
  image: ocaml/opam:debian-ocaml-4.09
  before_script:
    - sudo apt-get update && sudo apt-get upgrade -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    - opam depext -i -y zarith
    - sudo apt-get install m4 -y
    - opam install odoc -y
    - opam install . -y
  script:
    - dune build @doc
    - cp -r _build/default/_doc/_html _odoc/
  artifacts:
    paths:
      - _odoc
  rules:
    - when: always

# Coverage
coverage:
  stage: coverage
  image: ocaml/opam:debian-ocaml-4.10
  rules:
    - when: always
  before_script:
    - sudo apt-get install m4 jq curl -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    - opam depext -i -y zarith
    - opam install -y --with-test .
  script:
    - dune runtest --instrument-with bisect_ppx --force
    - bisect-ppx-report coveralls coverage-raw.json --coverage-path _build/default/
    - ./_ci/coverage_metadata_glci.sh coverage-raw.json > coverage_glci.json
    - curl --location --request POST 'https://coveralls.io/api/v1/jobs' --form 'json_file=@coverage_glci.json'

pages:
  stage: deploy
  image: ocaml/opam:debian-ocaml-4.09
  script:
    - cp -r _odoc public/
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
