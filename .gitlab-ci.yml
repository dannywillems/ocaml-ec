stages:
  - lint
  - build
  - doc

lint:
  stage: lint
  image: ocaml/opam2:4.09
  image: registry.gitlab.com/dannywillems/docker-ocamlformat:0.15.0
  before_script:
    - eval $(opam env)
  script:
    - ocamlformat --check src/*.ml*
    - ocamlformat --check test/*.ml*

.build-test: &build_definition
  stage: build
  before_script:
    # Always update system package manager + setup OPAM env
    - sudo apt-get update && sudo apt-get upgrade -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    - opam depext -i -y zarith
  script:
    - opam install --deps-only --with-test -y .
    # Install the package
    - opam install . -y
    # Run tests
#    - dune build @runtest
    # js_of_ocaml compatibility
#    - opam install js_of_ocaml js_of_ocaml-compiler js_of_ocaml-ppx zarith_stubs_js
#    - dune build js
#    - cp _build/default/js/FiniteField.js js/test
#    - node js/test/test_js.js

build-ocaml-4.07:
  <<: *build_definition
  image: ocaml/opam2:4.07

build-ocaml-4.08:
  <<: *build_definition
  image: ocaml/opam2:4.08

build-ocaml-4.09:
  <<: *build_definition
  image: ocaml/opam2:4.09

build-ocaml-4.10:
  <<: *build_definition
  image: ocaml/opam2:4.10

generate-documentation:
  stage: doc
  image: ocaml/opam2:4.09
  before_script:
    - sudo apt-get install m4 -y
    - eval $(opam env)
    - opam repository set-url default https://opam.ocaml.org
    - opam update
    - opam depext -i -y zarith
    - opam install dune odoc
    - opam install -y .
  script:
    - dune build @doc
